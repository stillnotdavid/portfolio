{"version":3,"file":"component---src-pages-projects-currency-index-js-526d11c8e0b74ca70363.js","mappings":"+MAAA,EAAe,IAA0B,mDCAzC,EAAe,IAA0B,8DCAzC,EAAe,IAA0B,sDCAzC,EAAe,IAA0B,qDCAzC,EAAe,IAA0B,yDCAzC,EAAe,IAA0B,uDCAzC,EAAe,IAA0B,uDCAzC,EAAe,IAA0B,yDCoVzC,EAnUoB,WAClB,OACE,uBAAKA,UAAU,YACb,gBAACC,EAAA,EAAD,CAAQC,MAAM,kDACd,0BAAQF,UAAS,UACf,uBAAKA,UAAU,qBACb,gBAAC,KAAD,QAGJ,uBAAKA,UAAU,WACb,uBAAKA,UAAU,aACb,uBAAKA,UAAU,iBACb,uBAAKG,IAAKC,KAEZ,uBAAKJ,UAAU,mBACb,uBAAKA,UAAU,iBACb,uBAAKA,UAAU,oBAAf,YACA,sDAGJ,uBAAKA,UAAU,iBACb,uBAAKA,UAAU,qBACb,sCACA,qEAC4C,IAC1C,qBAAGK,KAAK,mBAAR,YAFF,sKAOA,yRAOA,qBACEL,UAAU,2BACVK,KAAK,8CAFP,oBAOF,uBAAKL,UAAU,iBACb,sCACA,4CACA,0BACE,8PAOF,uCACA,0BACE,4LAKA,6KASN,uBAAKA,UAAU,iBACb,+BACE,qCACA,mjBAWA,iZASA,shBAYF,+BACE,wCACA,8CACA,iXAQA,iUAOA,6TAOA,sTAOA,gDACA,sgBAUA,uSAOA,uNAKA,kWAQA,yCACA,0TAOA,6MAKA,qTAQF,+BACE,6CACA,2KAKA,uBAAKA,UAAU,QACb,2BACE,gDACA,0hBAYF,2BACE,2CACA,ohBAYF,2BACE,2CACA,4cAWF,2BACE,2CACA,uXAYN,+BACE,oCACA,oNAMA,uBAAKG,IAAKG,IACV,uSAOA,uBAAKH,IAAKI,KAEZ,+BACE,sDACA,wNAKA,uBAAKJ,IAAKK,IACV,8LAG4C,IAC1C,6CAJF,mBAI6C,IAC3C,sDALF,kCAMK,6CANL,yEASA,uBAAKL,IAAKM,KAEZ,+BACE,gDACA,oFACA,uBAAKN,IAAKO,IACV,yMAKA,uBAAKP,IAAKQ,IACV,4KAMF,+BACE,kDACA,0RAMA,uBAAKR,IAAKS","sources":["webpack://david-le-s-portfolio/./src/images/projects/currency/hero.png","webpack://david-le-s-portfolio/./src/images/projects/currency/currency-brands.png","webpack://david-le-s-portfolio/./src/images/projects/currency/buttons.png","webpack://david-le-s-portfolio/./src/images/projects/currency/tokens.png","webpack://david-le-s-portfolio/./src/images/projects/currency/components.png","webpack://david-le-s-portfolio/./src/images/projects/currency/variants.png","webpack://david-le-s-portfolio/./src/images/projects/currency/patterns.png","webpack://david-le-s-portfolio/./src/images/projects/currency/prototypes.png","webpack://david-le-s-portfolio/./src/pages/projects/currency/index.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/hero-ca339716039e81efebc3a008fe6ce7ac.png\";","export default __webpack_public_path__ + \"static/currency-brands-fac5a4c25e8453dae3137ae13d30e153.png\";","export default __webpack_public_path__ + \"static/buttons-474a7c30ba1a290b24f81c15c3928b2f.png\";","export default __webpack_public_path__ + \"static/tokens-8e66d3602f392eb2812c2c8254a259e0.png\";","export default __webpack_public_path__ + \"static/components-ffdc14b7a930469713e5b5c1cf4a10a1.png\";","export default __webpack_public_path__ + \"static/variants-63c86c9960bef321e1db09c1220baf4e.png\";","export default __webpack_public_path__ + \"static/patterns-0f53836ac8758a1b31fac2e04bba1f4d.png\";","export default __webpack_public_path__ + \"static/prototypes-36344fe3ab13aae09ae8dccde5b0d550.png\";","import * as React from \"react\";\nimport { Logo } from \"../../../components\";\nimport \"./style.scss\";\n\nimport { Helmet } from \"react-helmet\";\n\nimport hero from \"../../../images/projects/currency/hero.png\";\nimport brands from \"../../../images/projects/currency/currency-brands.png\";\nimport buttons from \"../../../images/projects/currency/buttons.png\";\nimport tokens from \"../../../images/projects/currency/tokens.png\";\nimport components from \"../../../images/projects/currency/components.png\";\nimport variants from \"../../../images/projects/currency/variants.png\";\nimport patterns from \"../../../images/projects/currency/patterns.png\";\nimport prototypes from \"../../../images/projects/currency/prototypes.png\";\nimport \"../../../styles/main.scss\";\n\n// markup\nconst ProjectPage = () => {\n  return (\n    <div className=\"currency\">\n      <Helmet title=\"Currency Design System - David Le's Portfolio\" />\n      <header className={`header`}>\n        <div className=\"header__container\">\n          <Logo />\n        </div>\n      </header>\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"project__hero\">\n            <img src={hero} />\n          </div>\n          <div className=\"project__header\">\n            <div className=\"project__name\">\n              <div className=\"project__company\">M&amp;T Bank</div>\n              <h1>Currency Design System</h1>\n            </div>\n          </div>\n          <div className=\"project__info\">\n            <div className=\"project__overview\">\n              <h2>Overview</h2>\n              <p>\n                Currency is the official design system of{\" \"}\n                <a href=\"https://mtb.com\">M&amp;T Bank</a>, used by numerous\n                design and engineering teams. It is comprised of three parts,\n                the Figma component library, the codebase, and the documentation\n                standalone site.\n              </p>\n              <p>\n                I joined the bank's Customer Experience Design team in 2018 as\n                the second UX Engineer on the Design System team. For the last\n                3.5 years, my focus at M&amp;T has been on building Currency\n                from the ground up and continuing to grow it as a standalone\n                product.\n              </p>\n              <a\n                className=\"button button--secondary\"\n                href=\"https://currency-design-system.netlify.app\"\n              >\n                Visit Live Site\n              </a>\n            </div>\n            <div className=\"project__role\">\n              <h2>My Roles</h2>\n              <h3>Lead Engineer:</h3>\n              <ul>\n                <li>\n                  I'm currently leading the engineering efforts of Currency,\n                  including managing the front-end technology stack, development\n                  standards and conventions, approving all pull requests, and\n                  responsible for all releases and updates.\n                </li>\n              </ul>\n              <h3>Designer:</h3>\n              <ul>\n                <li>\n                  During its inception, the team was small, so I filled the\n                  designer role for several components, as well as fully\n                  building the documentation site from scratch.\n                </li>\n                <li>\n                  As a member of the UX team, I am involved in any discussions\n                  regarding the design of components and providing guidance on\n                  how they are used.\n                </li>\n              </ul>\n            </div>\n          </div>\n\n          <div className=\"project__body\">\n            <section>\n              <h2>Purpose</h2>\n              <p>\n                The need for a design system is widely known now, almost to the\n                point of becoming a new buzzword in the industry, but it was\n                only a few years ago that we had to really prove to stakeholders\n                and executives the actual value of having one. Design systems\n                simply provide consistency, efficiency, and uniformity across a\n                brand. Being a UX Engineer, this concept deeply intrigued me as\n                I was always the person bridging the gap between engineering and\n                design, and a design system in essence is a personification of\n                my role at most companies.\n              </p>\n              <p>\n                Design systems remove, or at the very least, migitate the need\n                for engineers to go through a design review process in which\n                each detail and pixel is examined to see if it matches the\n                design that was originally delivered. In fact, this extends even\n                to design teams themselvesâ€”ensuring that any component or\n                element used by one designer is identical to that used by\n                another.\n              </p>\n              <p>\n                This of course is not new nor unique to what is branded as a\n                \"design system\". It existed in Sketch as Symbols for quite some\n                time, and even moreso in front-end engineering as components. A\n                design system takes this principle of consistency and\n                reusability and amplifies it across every aspect of the product\n                as an umbrella of uniformity. Usage guidelines, content design,\n                usability, UI language, tokens, stylesheets, all live and exist\n                together under one living, breathing product that is a design\n                system.\n              </p>\n            </section>\n            <section>\n              <h2>Challenges</h2>\n              <h3>In the beginning</h3>\n              <p>\n                When I first joined, the design system simply did not exist, as\n                I was part of the team responsible for creating it from scratch.\n                At this time, design systems were a relatively new topic just\n                starting to gain popularity. There were only a handful of public\n                design systems that we were able to learn and study from, such\n                as Shopify's Polaris.\n              </p>\n              <p>\n                My team and I were sent to Clarity in NYC, a design systems\n                convention dedicated to guiding and teaching design teams about\n                design systems. We learned about various useful topics, such as\n                how to sell teams on adapting a design system, component naming\n                philosophy, and engineering conventions.\n              </p>\n              <p>\n                Because our team was small, we focused on what was important,\n                building what was essential an MVP of a design system. A Sketch\n                component library (we did not switch to Figma until later), a\n                CSS library, and a documentation site to showcase and provide\n                guidance on how to use our components.\n              </p>\n              <p>\n                To provide value to the company, the components had to not only\n                follow every part of the bank's design guidelines, but had to\n                also pass vigorous usability testing. On top of that, the\n                front-end components had to be cross-browser compatible and\n                degrade gracefully on other versions.\n              </p>\n              <h3>Growing The System</h3>\n              <p>\n                Convincing teams to adapt a design system was the biggest\n                challenge we faced while growing. It didn't matter how great our\n                components were, or how clean our code was. Without users, a\n                design system serves no purpose as a product. Our design teams\n                were enthusiastic about using it, understandably so, as it\n                provided them the most value and saved them the most time. From\n                a designer's perspective, there werre only pros with very little\n                cons, since it was easy to simply divert away from it.\n              </p>\n              <p>\n                Getting engineering teams to use our product was another story.\n                Developers tend to be more careful with what external\n                dependencies they use, have their own conventions and processes\n                in place, and overriding code is much more of a hassle than\n                overriding design files.\n              </p>\n              <p>\n                Stakeholders were also unsure of the value of having a custom\n                design system over something like Google Material that not only\n                works straight out of the box but emcompasses more features.\n              </p>\n              <p>\n                On top of acquiring users, we also had the challenge of\n                convincing higher ups to allow our team to grow, which was\n                incredibly difficult if there were no real teams actively using\n                it. It was a catch 22â€”how could we get the product to be in a\n                state where it could be adapted by engineering teams if we\n                didn't have the manpower?\n              </p>\n              <h3>Present Day</h3>\n              <p>\n                3 years later, our design system is more mature than it was\n                before, but certainly not perfect. Design systems are always\n                growing, so there's no true final state, but there is still much\n                work to do. Even though we've successfully proved our worth,\n                scaling was now our biggest challenge.\n              </p>\n              <p>\n                Bug fixes take up the majority of our time and priority, as we\n                now have numerous teams using it in their workflow. The more\n                use-cases there are, the more bugs to be discovered.\n              </p>\n              <p>\n                There are still more components to build, and we have not found\n                a way to efficiently work out external contribution from other\n                teams. The process of adding a new component to the design\n                system is extensive, and the team isn't growing fast enough to\n                compensate for the new demand.\n              </p>\n            </section>\n            <section>\n              <h2>Core Principles</h2>\n              <p>\n                As per its name (by yours truly), Currency is intended to be\n                used as bartering system for exchanging [ideas] between\n                designers and developers.\n              </p>\n              <div className=\"grid\">\n                <div>\n                  <h3>Framework Agnostic</h3>\n                  <p>\n                    Because it serves such a wide range of teams across the\n                    company, Currency itself cannot be tied to a single\n                    framework or library, but at the same time, it must be\n                    compatible with every engineering stack. To address this, we\n                    offer two consumable librariesâ€”a large compiled CSS\n                    stylesheet for teams that do not need anything more than\n                    pre-existing styles, or a more robust SCSS library. We serve\n                    this as an npm package on the company's private registry,\n                    allowing any engineering team to quickly make use of it.\n                  </p>\n                </div>\n                <div>\n                  <h3>Unopinionated</h3>\n                  <p>\n                    We understood that the commitment to adapting a design\n                    system was huge, so the very least we could do was integrate\n                    into product teams without being too invasive. Currency was\n                    designed to be a utility belt that allowed itself to be\n                    called upon without overriding any existing styles. This was\n                    made possible using the BEM naming convention. Additionally,\n                    we made it easy to override Currency's styles locally. This\n                    was one of our main selling points as to why teams should\n                    Currency over Material Design.\n                  </p>\n                </div>\n                <div>\n                  <h3>Atomic Design</h3>\n                  <p>\n                    Coined by Brad Frost, atomic design is a design methodology\n                    that groups design elements together based on the atomic\n                    theory. Atoms are the smallest building blocks in the\n                    natural world, so design elements that cannot be broken down\n                    any further are considered atoms. A group of atoms create a\n                    molecule, which becomes organisms, and so on. This level of\n                    dependency between components allows for seamless\n                    scalability and consistency.\n                  </p>\n                </div>\n                <div>\n                  <h3>Design Tokens</h3>\n                  <p>\n                    Tokenizing design artifacts allows for cross-platform\n                    synchronization, and goes hand-in-hand with the atomic\n                    design methodology. Tokens are essentially subatomic\n                    particles (such as an electron), used to form atoms. These\n                    tokens are aligned between design assets and code to ensure\n                    uniformity. This also allows for more structured code\n                    writing.\n                  </p>\n                </div>\n              </div>\n            </section>\n            <section>\n              <h2>Brands</h2>\n              <p>\n                Currency is the design system for both M&amp;T Bank and\n                Wilmington Trust. Because the brands are simultaneously\n                independent and interconnected, the design system has to also\n                reflect this.\n              </p>\n              <img src={brands} />\n              <p>\n                Components exist for both brands, keeping structural\n                similarities and sharing the same codebase, with different\n                tokens being fed to them. However, some components are\n                brand-exclusive, and while each component exists in the system,\n                they are not used unless necessary.\n              </p>\n              <img src={buttons} />\n            </section>\n            <section>\n              <h2>Design Tokens (Subatoms)</h2>\n              <p>\n                The smallest possible design element are tokensâ€”or essentially,\n                variables. Currency keeps a uniform library of tokens that feeds\n                to both the Figma component library and the SCSS codebase.\n              </p>\n              <img src={tokens} />\n              <p>\n                The most generic example of tokens are colors, spacing, and\n                typography, but they extend beyond the initial level and can\n                nest upon one another. For example, while{\" \"}\n                <code>$colorPrimary</code> may be a token,{\" \"}\n                <code>$buttonBackgroundColor</code> is also a token that calls\n                on <code>$colorPrimary</code>, although the latter is an atomic\n                token, as opposed to a base token.\n              </p>\n              <img src={prototypes} />\n            </section>\n            <section>\n              <h2>Components (Atoms)</h2>\n              <p>Atoms are the most basic design elements of the system.</p>\n              <img src={components} />\n              <p>\n                The basis of an atom is that it cannot exist as a smaller\n                standalone element. Labels, inputs, error messages, radio\n                buttons, buttons, are all examples of atomic components.\n              </p>\n              <img src={variants} />\n              <p>\n                Each component has variants of itself to cater to the different\n                usecases. Additionally, interactive components also have\n                predetermined states.\n              </p>\n            </section>\n            <section>\n              <h2>Patterns (Molecules)</h2>\n              <p>\n                Patterns are a collection of components placed together to form\n                a standalone functional component. They can sometimes, although\n                rarely, have elements that do not exist as standalone atomic\n                components, as they have no real purpose outside of the pattern.\n              </p>\n              <img src={patterns} />\n            </section>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectPage;\n"],"names":["className","Helmet","title","src","hero","href","brands","buttons","tokens","prototypes","components","variants","patterns"],"sourceRoot":""}